#!/bin/sh

###
  # Puppet	 bootstrapper
  #
  # bootstraps new instances for nodeless puppet
  # @installation: sh -c "$(curl -fsSL http://con.structed.io)"
  #
  # @inspiredby http://goo.gl/dGYCQF
  #
  ##


### base config
RANDOM="$(perl -e 'print int(rand(300));')"
TIMESTAMP="$(date -R)"
PUPPET_RPM="http://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-7.noarch.rpm"
PUPPET_DIR="${HOME}/.puppet${RANDOM}"
PUPPET_LOCK="${PUPPET_DIR}/puppet-bootstrap.lock"
FILE_PUPPET_APPLY="${PUPPET_DIR}/puppet-apply.sh"
FILE_PUPPET_RUN="${PUPPET_DIR}/puppet-run.sh"
FILE_PUPPET_UPDATE="${PUPPET_DIR}/puppet-update.sh"
FILE_CRONTAB="${PUPPET_DIR}/puppet-crontab.txt"


	echo "#####"
	echo "# con.structed.io Puppet bootstrapper"
	echo "#####"


### check if script has been run before
if [ ! -f "${PUPPET_LOCK}" ]
then

	### remove previously installed versions of Puppet
	echo " "
	echo "# removing previously installed versions of Puppet"
	sudo yum --assumeyes remove puppet


	### install remote RPM for Puppet Labs
	echo " "
	echo "# installing Puppet Labs RPM"
	sudo rpm -ivh ${PUPPET_RPM}


	### install Puppet via yum
	echo " "
	echo "# installing Puppet"
	sudo yum --assumeyes install puppet


	### create Puppet run scripts
	echo "# creating Puppet run scripts"
	mkdir -p ${PUPPET_DIR}

	echo -n "#!/bin/sh
puppet apply /etc/puppet/manifests/mainrun.pp" > ${FILE_PUPPET_APPLY}

	echo -n "${PUPPET_DIR}/puppet-update.sh
${FILE_PUPPET_APPLY}" > ${FILE_PUPPET_RUN}



	### create crontab file and add it to crontab
	echo " "
	echo "# creating crontab"

	echo " " >> ${FILE_CRONTAB}
	echo "# generated by ${0} on ${TIMESTAMP}" >> ${FILE_CRONTAB}

	### TODO
	### TODO  figure out way to get git / svn export of files in here
	### TODO

	echo "*/15 * * * * sleep `perl -e 'print int(rand(300));'` && ${FILE_PUPPET_RUN} > /dev/null" > ${FILE_CRONTAB}


	echo " "
	echo "# writing crontab for ${USER}"
	sudo crontab -u ${USER} ${FILE_CRONTAB}


	echo " "
	echo "# run puppet for the first time"
	echo "sudo sh ${FILE_PUPPET_UPDATE}"
	echo "sudo sh ${FILE_PUPPET_APPLY}"


	### create lockfile
	echo " "
	echo "# creating lockfile"
	echo -n "last run: ${TIMESTAMP}" > ${PUPPET_LOCK}


### show warning if script has been run before
else
	echo "#####"
	echo "# ${PUPPET_LOCK} has been found, aborting."
	echo "#####"
fi